name: Update Analytics Dashboard (DISABLED)

on:
  # DISABLED: This workflow was causing frequent git updates and has been deactivated
  # To re-enable, uncomment the lines below:
  # schedule:
  #   # Run daily at 6 AM UTC
  #   - cron: '0 6 * * *'
  # workflow_dispatch:  # Allow manual triggering
  
  # Using a non-existent trigger to effectively disable the workflow
  push:
    branches:
      - "disable-analytics-workflow"  # This branch doesn't exist, so workflow won't run

jobs:
  update-analytics:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        ref: main

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"

    - name: Install dependencies
      run: |
        pip install pandas requests

    - name: Collect analytics data
      run: |
        echo "Collecting analytics data from GitHub Issues..."
        # Collect analytics data from GitHub Issues API (no authentication needed for public repo)
        python data_sources/analytics/collect_analytics.py --output /tmp/analytics_data.json
        
        echo "Analytics data collected successfully"
        ls -la /tmp/analytics_data.json || echo "No analytics data file created"

    - name: Generate analytics dashboard
      run: |
        echo "Generating analytics dashboard..."
        python data_sources/analytics/analytics_dashboard.py --input /tmp/analytics_data.json --output docs/analytics.html
        if [ $? -ne 0 ]; then
          echo "::error::Dashboard generation failed."
          exit 1
        fi
        echo "Dashboard generated."

    - name: Check if analytics changed and commit only if needed
      run: |
        git config --global user.name "GitHub Actions (Analytics Update)"
        git config --global user.email "actions@github.com"
        
        # Check if analytics.html actually changed
        if git diff --quiet docs/analytics.html; then
          echo "Analytics dashboard unchanged, no commit needed."
        else
          echo "Analytics dashboard changed, committing update..."
          git add docs/analytics.html
          commit_msg="Update analytics dashboard - $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
          git commit -m "$commit_msg"
          
          # Use a retry mechanism for push in case of conflicts
          for i in {1..3}; do
            echo "Push attempt $i..."
            if git push origin main; then
              echo "Successfully pushed analytics update."
              break
            else
              echo "Push failed, pulling latest changes and retrying..."
              git pull --rebase origin main
              if [ $i -eq 3 ]; then
                echo "::error::Failed to push after 3 attempts."
                exit 1
              fi
            fi
          done
        fi

    - name: Summary
      run: |
        echo "Analytics update completed successfully!"
        if [ -f "docs/analytics.html" ]; then
          echo "Dashboard file size: $(du -h docs/analytics.html | cut -f1)"
        fi
        echo "Analytics dashboard available at your GitHub Pages URL/analytics.html" 